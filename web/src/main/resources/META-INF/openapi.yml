openapi: 3.0.0
servers:
  - url: https://forge.api.prod-preview.openshift.io/api
    description: Staging server (uses live data)
  - url: https://forge.api.openshift.io/api
    description: Production server (uses live data)
  - url: http://localhost:8080/api
    description: Local development
info:
  version: "2.0.0"
  title: Launcher Backend API
  description: >-
    This document defines the REST endpoints exposed by the launcher-backend
    component
security:
  - application:
      - read
      - write
paths:
  /booster-catalog:
    get:
      summary: Returns the booster catalog information
      security: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization header is
            handled.
          schema:
            type: string
            enum:
              - launcher
            default: launcher
      description: >-
        This endpoint returns the entire booster catalog
      tags:
        - Booster Catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
        '404':
          description: Not Found
  /booster-catalog/reindex:
    post:
      summary: Reindexes the booster catalog repository
      description: This endpoint reindexes the booster catalog data
      security: []
      tags:
        - Booster Catalog
      responses:
        '200':
          description: OK
        '401':
          description: Token does not match
      parameters:
        - name: token
          in: query
          description: The token to be used
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /booster-documentation/reload:
      post:
        summary: Reload the booster documentation repository
        description: This endpoint reload the booster documentation data
        security: []
        tags:
          - Booster Documentation
        responses:
          '200':
            description: OK
          '401':
            description: Token does not match
        parameters:
          - name: token
            in: query
            description: The token to be used
            schema:
              type: string
        requestBody:
          content:
            application/json:
              schema:
                type: object
  /services/openshift/clusters:
    get:
      summary: Returns the clusters that this user has access
      description: >-
        This endpoint returns the available clusters that the authenticated user
        has access
      tags:
        - OpenShift
        - Services
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClusterVerified'
  /services/openshift/clusters/all:
    get:
      summary: Returns all clusters
      description: This endpoint returns all the configured clusters
      security: []
      tags:
        - OpenShift
        - Services
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cluster'
  '/services/openshift/projects/{projectName}':
    head:
      summary: Validates if the openshift project exists
      tags:
        - Services
        - OpenShift
        - Validation
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization
            header is handled. If this header is not provided, the backend will
            attempt to resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
        - name: X-OpenShift-Cluster
          in: header
          description: The OpenShift cluster to use
          required: true
          schema:
            type: string
        - name: X-OpenShift-Authorization
          in: header
          description: >-
            The OpenShift authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
        - name: projectName
          in: path
          required: true
          description: The repository name
          schema:
            type: string
      responses:
        '200':
          description: Project exists
        '404':
          description: Project does not exist
  /services/openshift/user:
    get:
      summary: Returns the current authenticated user information
      tags:
        - OpenShift
        - Services
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The logged user name
                    example: my-user-name

  /services/git/user:
    get:
      summary: Returns the current authenticated user information
      tags:
        - Git
        - Services
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization header is
            handled. If this header is not provided, the backend will attempt to
            resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                    description: The logged user
                    example: my-awesome-git-account
                  avatar_url:
                    type: string
                    description: The avatar URL for this Git user
                    example: 'https://avatars1.githubusercontent.com/u/54133?v=4'
                  organizations:
                    type: array
                    description: The organizations for the current user and given Git provider
                    items:
                      type: string
                  repositories:
                    type: array
                    description: The repositories for the current user and given Git provider
                    items:
                      type: string
  /services/git/providers:
    get:
      summary: Returns the supported Git providers
      tags:
        - Git
        - Services
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  $ref: '#/components/schemas/GitServiceConfig'
  /services/git/organizations:
    get:
      summary: Returns the organizations for the current user and given Git provider
      tags:
        - Git
        - Services
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization
            header is handled. If this header is not provided, the backend will
            attempt to resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
        - name: X-Git-Provider
          in: header
          description: 'The Git provider to use. (GitHub, GitLab)'
          schema:
            type: string
            default: GitHub
        - name: X-Git-Authorization
          in: header
          description: >-
            The Git authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
  /services/git/repositories:
    get:
      summary: Returns the repositories for the current organization
      tags:
        - Git
        - Services
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization header is
            handled. If this header is not provided, the backend will attempt to
            resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
        - name: X-Git-Provider
          in: header
          description: 'The Git provider to use. (GitHub, GitLab)'
          schema:
            type: string
            default: GitHub
        - name: X-Git-Authorization
          in: header
          description: >-
            The Git authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
        - name: organization
          in: query
          description: >-
            The Git organization. If not specified it will use the  return the
            repositories from the current user
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  '/services/git/repositories/{repositoryName}':
    head:
      summary: Validates if the git repository exists
      tags:
        - Services
        - Git
        - Validation
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization
            header is handled. If this header is not provided, the backend will
            attempt to resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
        - name: X-Git-Provider
          in: header
          description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'
          schema:
            type: string
            default: GitHub
        - name: X-Git-Authorization
          in: header
          description: >-
            The Git authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
        - name: repositoryName
          in: path
          required: true
          description: The repository name
          schema:
            type: string
      responses:
        '200':
          description: Repository exists
        '404':
          description: Repository does not exist
  /launcher/zip:
    get:
      summary: Downloads Booster as a zip
      tags:
        - Launcher
      security: []
      responses:
        '200':
          description: OK
          content:
            application/zip: {}
        '400':
          description: Validation Failed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
      parameters:
        - name: mission
          description: The mission ID to be used
          in: query
          required: true
          schema:
            type: string
        - name: runtime
          description: The runtime ID to be used
          in: query
          required: true
          schema:
            type: string
        - name: runtimeVersion
          description: The runtime version to be used
          in: query
          schema:
            type: string
        - name: projectName
          description: The ZIP file name
          in: query
          schema:
            type: string
        - name: groupId
          description: The Maven group ID to be used (for Maven projects only)
          in: query
          schema:
            type: string
        - name: artifactId
          description: The Maven artifact ID to be used (for Maven projects only)
          in: query
          schema:
            type: string
        - name: projectVersion
          description: The project version to use
          in: query
          schema:
            type: string
            default: 1.0.0
        - name: ide
          description: Generate descriptor for which IDEs (vscode)
          in: query
          schema:
            type: array
            items:
              type: string
  /launcher/launch:
    post:
      tags:
        - Launcher
      security:
        - bearerAuth: []
      parameters:
        - name: X-App
          in: header
          description: >-
            The Application where this request originated from (launcher).
            This is necessary to determine how the Authorization
            header is handled. If this header is not provided, the backend will
            attempt to resolve this information from the Host header
          required: true
          schema:
            type: string
            enum:
              - launcher
            default: launcher
        - name: X-Git-Provider
          in: header
          description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'
          schema:
            type: string
            default: GitHub
        - name: X-Git-Authorization
          in: header
          description: >-
            The Git authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
        - name: X-OpenShift-Cluster
          in: header
          description: The OpenShift cluster to use
          schema:
            type: string
        - name: X-OpenShift-Authorization
          in: header
          description: >-
            The OpenShift authorization information (in the format Bearer: token), otherwise
            it will be resolved from the existing environment variables and from the identity
            provider configured (in this order)
          schema:
            type: string
        - name: X-Execution-Step-Index
          in: header
          description: >-
            The step index where the execution flow has stopped. Necessary when
            requests must be retried
          required: true
          schema:
            type: string
            default: 0
      summary: Launches the chosen booster
      description: >-
        Launches the selected booster (creates the github project, openshift
        project and registers webhooks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boom'
        '400':
          description: Validation Failed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                mission:
                  description: The mission ID to be used
                  type: string
                runtime:
                  description: The runtime ID to be used
                  type: string
                runtimeVersion:
                  description: The runtime version to be used
                  type: string
                projectName:
                  description: The OpenShift project name to be used
                  type: string
                projectVersion:
                  description: The project version
                  type: string
                  default: 1.0.0
                groupId:
                  description: The Maven group ID to be used (for Maven projects only)
                  type: string
                artifactId:
                  description: The Maven artifact ID to be used (for Maven projects only)
                  type: string
                gitOrganization:
                  description: The Git Organization to push the code
                  type: string
                gitRepository:
                  description: The Git Repository to push the code
                  type: string
                ide:
                  description: Generate descriptor for which IDEs (vscode)
                  type: array
                  items:
                    type: string
              required:
                - mission
                - runtime
  /launcher/upload:
    post:
      tags:
      - Launcher
      security:
      - bearerAuth: []
      parameters:
      - name: X-App
        in: header
        description: >-
          The Application where this request originated from (launcher).
          This is necessary to determine how the Authorization
          header is handled. If this header is not provided, the backend will
          attempt to resolve this information from the Host header
        required: true
        schema:
          type: string
          enum:
          - launcher
          default: launcher
      - name: X-Git-Provider
        in: header
        description: 'The Git provider to use. (GitHub, GitLab). Default is GitHub'
        schema:
          type: string
          default: GitHub
      - name: X-Git-Authorization
        in: header
        description: >-
          The Git authorization information (in the format Bearer: token), otherwise
          it will be resolved from the existing environment variables and from the identity
          provider configured (in this order)
        schema:
          type: string
      - name: X-OpenShift-Cluster
        in: header
        description: The OpenShift cluster to use
        schema:
          type: string
      - name: X-OpenShift-Authorization
        in: header
        description: >-
          The OpenShift authorization information (in the format Bearer: token), otherwise
          it will be resolved from the existing environment variables and from the identity
          provider configured (in this order)
        schema:
          type: string
      - name: X-Execution-Step-Index
        in: header
        description: >-
          The step index where the execution flow has stopped. Necessary when
          requests must be retried
        required: true
        schema:
          type: string
          default: 0
      summary: Launches the chosen booster
      description: >-
        Launches the selected booster (creates the github project, openshift
        project and registers webhooks)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boom'
        '400':
          description: Validation Failed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: The ZIP file containing the project to be pushed
                  type: string
                  format: base64
                projectName:
                  description: The OpenShift project name to be used
                  type: string
                gitOrganization:
                  description: The Git Organization to push the code
                  type: string
                gitRepository:
                  description: The Git Repository to push the code
                  type: string
              required:
              - projectName
  /creator/enums:
    get:
      summary: Returns all available enumeration definitions
      security: []
      description: >-
        This endpoint returns all known enumerations
      tags:
        - Creator catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enumerations'
  /creator/enums/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Returns the selected enumeration definition
      security: []
      description: >-
        This endpoint returns a given enumeration
      tags:
        - Creator catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enumeration'
  /creator/capabilities:
    get:
      summary: Returns the available Capabilities
      security: []
      description: >-
        This endpoint returns all known Capabilities
      tags:
        - Creator catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
  /creator/generators:
    get:
      summary: Returns the available Generators
      security: []
      description: >-
        This endpoint returns all known Generators
      tags:
        - Creator catalog
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generators'
  /creator/zip:
    post:
      summary: Create ZIP containing a generated project and returns and id to download it
      security: []
      description: >-
        This endpoint returns and id to download the ZIP containing code that was
        generated using the specified Capabilities
      tags:
        - Creator project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZipRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: The id to download the zip
                    type: string
        '400':
          description: Bad Request
  /creator/download:
    get:
      summary: Returns a ZIP containing a generated project for the specified id
      security: []
      description: >-
        This endpoint returns a ZIP containing a generated project for the specified id
      tags:
        - Creator project
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: The id returned by the zip method
      responses:
        '200':
          description: OK
          content:
            application/zip: {}
        '404':
          description: Not Found
  /creator/launch:
    post:
      summary: Pushes a generated project to GitHub and OpenShift
      security:
        - bearerAuth: []
      description: >-
        This endpoint pushes code that was generated using the specified
        Capabilities to a user's GitHub and OpenShift accounts
      tags:
        - Creator project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /creator/import/branches:
    get:
      summary: Lists all available branches and tags for the given Git repository
      description: >-
        Takes a Git repositor URL and returns the names of all the branches and tags
      tags:
        - Creator import
      parameters:
        - name: gitImportUrl
          in: query
          required: true
          schema:
            type: string
          description: The URL to the Git repository
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /creator/import/analyze:
    get:
      summary: Analyzes the given Git repository and returns what S2I builder image to use
      description: >-
        Takes a Git repositor URL and looks at the code inside it to determine what OpenShift
        S2I builder could be used to compile and run it
      tags:
        - Creator import
      parameters:
        - name: gitImportUrl
          in: query
          required: true
          schema:
            type: string
          description: The URL to the Git repository to analyze
        - name: gitImportBranch
          in: query
          schema:
            type: string
          description: The branch of the Git repository to analyze (defaults to "master")
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResult'
  /creator/import/launch:
    post:
      tags:
        - Creator import
      summary: Deploys an existing codebase on OpenShift
      security:
        - bearerAuth: []
      description: Deploys an existing codebase on OpenShift
      parameters:
        - name: applicationName
          in: query
          description: The name of the application to be created
          required: true
          schema:
            type: string
        - name: projectName:
          in: query
          description: The OpenShift project name to be used
          required: true
          schema:
            type: string
        - name: gitImportUrl
          in: query
          description: A URL to the git repository to import
          required: true
          schema:
            type: string
        - name: gitImportBranch
          in: query
          schema:
            type: string
          description: The branch of the Git repository to analyze (defaults to "master")
        - name: gitOrganization:
          in: query
          description: The Git Organization to push the code
          required: true
          schema:
            type: string
        - name: gitRepository:
          in: query
          description: The Git Repository to push the code
          schema:
            type: string
        - name: builderImage
          in: query
          description: The name of the image to use for building and running the code
          schema:
            type: string
        - name: builderLanguage
          in: query
          description: The language to use for building and running the code
          schema:
            type: string
      responses:
        '200':
          description: OK

components:
  schemas:
    Catalog:
      type: object
      properties:
        boosters:
          type: array
          description: All the catalog's boosters
          items:
            type: object
            properties:
              id:
                type: string
              ignore:
                type: boolean
              name:
                type: string
              description:
                type: string
              source:
                type: object
                properties:
                  git:
                    type: object
                    properties:
                        url:
                           type: string
                        ref:
                           type: string
              metadata:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      launcher:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                          runsOn:
                            type: array
                            description: the environments this booster runs on
                            items:
                              type: string
              mission:
                type: string
              runtime:
                type: string
              version:
                type: string
        runtimes:
          type: array
          description: All the catalog's runtimes
          items:
            type: object
            properties:
              id:
                type: string
              title:
                type: string
              description:
                type: string
              metadata:
                type: object
                properties:
                  suggested:
                    type: boolean
                  prerequisite:
                    type: string
                  pipelinePlatform:
                    type: string
                    description: Name of the Pipeline platform that this Runtime supports
                    example: maven
              icon:
                type: string
                description: URL of logo of runtime
              versions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    metadata:
                      type: object
                      properties:
                        suggested:
                          type: boolean
        missions:
          type: array
          description: All the catalog's missions
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              metadata:
                type: object
                properties:
                  suggested:
                    type: boolean
                  prerequisite:
                    type: string
                  level:
                    type: string
                    description: the proficiency level required to run this mission
                    enum:
                      - foundational
                      - advanced
                      - expert

    Cluster:
      type: object
      properties:
        id:
          type: string
          description: The cluster ID
        name:
          type: string
          description: 'The display name for this cluster'
        type:
          type: string
          description: 'The cluster type (can be starter, pro)'

    ClusterVerified:
      type: object
      properties:
        connected:
          type: boolean
          description: Is the cluster connected to the user account?
        cluster:
          $ref: '#/components/schemas/Cluster'

    Pipeline:
      type: object
      properties:
        id:
          type: string
          example: release
        name:
          type: string
          example: Release
        description:
          type: string
          example: This pipeline releases things
        platform:
          type: string
          description: The runtime platform on which the pipeline is meant to operate
          example: maven
        suggested:
          type: boolean
        techPreview:
          type: boolean
        stages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              description:
                type: string

    Boom:
      type: object
      properties:
        uuid:
          type: string
          example: 2d4700c6-0224-11e8-ba89-0ed5f89f718b
        uuid_link:
          type: string
          example: /status/2d4700c6-0224-11e8-ba89-0ed5f89f718b
        events:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              message:
                type: string

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: Project Name is required
        source:
          type: string
          example: projectName

    GitServiceConfig:
      type: object
      properties:
        id:
          type: string
          description: The Git provider ID
        name:
          type: string
          description: 'The display name for this Git provider'
        type:
          type: string
          description: 'The Git provider type (can be GITHUB, BITBUCKET, GITLAB or GITEA)'
        apiUrl:
          type: string
          description: 'The API URL for this Git provider'
        repositoryUrl:
          type: string
          description: 'The repository URL for this Git provider'
        clientProperties:
          type: object
          description: 'Client properties useful to communicate with this Git provider'

    Enumeration:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        metadata:
          type: object

    Enumerations:
      type: array
      items:
        $ref: '#/components/schemas/Enumeration'

    CatalogItem:
      type: object
      properties:
        type:
          type: string
        module:
          type: string
        name:
          type: string
        description:
          type: string
        metadata:
          type: object
        props:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              description:
                type: string
              type:
                type: string
              required:
                type: boolean

    Capabilities:
      type: array
      items:
        $ref: '#/components/schemas/CatalogItem'

    Generators:
      type: array
      items:
        $ref: '#/components/schemas/CatalogItem'

    ZipRequest:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Application'
      required:
        - project

    LaunchRequest:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/Application'
        clusterId:
          description: The OpenShift cluster to use
          type: string
        projectName:
          description: The OpenShift project name to be used
          type: string
        gitOrganization:
          description: The Git Organization to push the code
          type: string
        gitRepository:
          description: The Git Repository to push the code
          type: string
      required:
        - project
        - clusterId
        - projectName
        - gitOrganization
        - gitRepository

    Application:
      type: object
      properties:
        application:
          description: The application name to use for the project
          type: string
        parts:
          description: The application parts to use for the project
          type: array
          items:
            type: object
            properties:
              subFolderName:
                description: The (optional) name of the subfolder to use for the capabilities
                type: string
              shared:
                description: The shared properties that get applied to each selected Capability
                type: object
                properties:
                  runtime:
                    description: The runtime to use for the project
                    type: object
                    properties:
                      name:
                        description: The name of the runtime
                        type: string
                      version:
                        description: The version of the runtime
                        type: string
                    required:
                      - name
              capabilities:
                description: The capabilities to add to the project
                type: array
                items:
                  type: object
                  properties:
                    module:
                      description: The id of the selected Capability
                      type: string
                    props:
                      description: The properties for the selected Capability
                      type: object
                  required:
                    - module
            required:
              - capabilities
      required:
        - application
        - parts

    AnalysisResult:
      type: object
      properties:
        folders:
          description: An object containing the entire folder structure of the analyzed repository
          type: object
        image:
          description: The id of the detected builderImage to use (deprecated)
          type: string
        importables:
          type: array
          items:
            type: object
            properties:
              folder:
                description: The path of the folder that contains a detected codebase
                type: string
              image:
                description: The id of the builderImage to use for the detected codebase
                type: string
        builderImages:
          type: array
          items:
            $ref: '#/components/schemas/Enumeration'

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes

